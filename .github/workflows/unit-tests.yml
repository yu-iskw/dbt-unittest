name: Unit tests
on:
  push:
    branches:
      - main
  pull_request:
# TODO uncomment when the workflow gets stable.
#    paths:
#      - macros/
#      - integration_tests/macros/

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DBT_DATA_PRIVACY_TEST_PROJECT: "${{ secrets.DBT_DATA_PRIVACY_TEST_PROJECT }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - pip-requirements: "requirements-1.0.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.1.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.2.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.2.txt"
            python-version: "3.10"
          - pip-requirements: "requirements-1.3.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.3.txt"
            python-version: "3.10"
          - pip-requirements: "requirements-1.4.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.4.txt"
            python-version: "3.10"
          - pip-requirements: "requirements-1.4.txt"
            python-version: "3.11"
          - pip-requirements: "requirements-1.5.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.5.txt"
            python-version: "3.10"
          - pip-requirements: "requirements-1.5.txt"
            python-version: "3.11"
          - pip-requirements: "requirements-1.6.txt"
            python-version: "3.9"
          - pip-requirements: "requirements-1.6.txt"
            python-version: "3.10"
          - pip-requirements: "requirements-1.6.txt"
            python-version: "3.11"
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pip
        run: |
          pip install -U pip==23.0.1
      - name: Install dbt
        working-directory: "${{ github.workspace }}/integration_tests"
        run: |
          # Use 'legacy-resolver' to speed up
          pip install -r "requirements/${{ matrix.pip-requirements }}" --use-deprecated "legacy-resolver"
      - name: Run unit tests
        working-directory: "${{ github.workspace }}/integration_tests"
        run: |
          bash run_unit_tests.sh
      # Save artifacts for debug
      - name: Save logs and artifacts if failed
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: save-logs-and-target-${{ matrix.python-version }}-${{ matrix.pip-requirements }}
          retention-days: 3
          path: |
            integration_tests/logs
            integration_tests/target
      - id: exit
        run: exit ${{ steps.apply.outputs.exitcode }}
